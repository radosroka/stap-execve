probe begin {
    printf("Hello World %s !!!\n", "some string")
}



function tttouch:long() %{

        struct file *filp = filp_open("/usr/bin/mkdir", O_RDONLY, 0777);
        if (IS_ERR(filp)) {
		   filp = NULL;
	    }


        if (filp) {
           filp_close(filp, NULL);
           THIS->__retvalue = 1;
        } else {
          THIS->__retvalue = 0;
        }



%}

/*
probe syscall.open {
    if (execname() == "bash" || execname() == "ls" )
       printf("%s %s (%ld) | %s \n", name, execname(), pid(), filename )
}
*/

/*
probe kernel.function("do_sys_open") {
      if (execname() == "ls" || execname() == "bash" )
         printf("%s %s (%ld) | %s \n", probefunc(), execname(), pid(), $$vars$ )
}
*/


/*
probe syscall.execve.return {
    if (execname() == "ls" || execname() == "bash" ) {
       printf("%s %s (%ld) | %s \n", name, execname(), pid(), filename )

       printf("touched1\n")
       if (tttouch()) {
          printf("success\n")

          }

        printf("touched2\n")
    }
}

*/


probe syscall.openat {
    if (execname() == "ls" || execname() == "bash" )
       printf("%s %s (%ld) | %s \n", name, execname(), pid(), filename )
}


probe kernel.function("open_exec") {
      if (execname() == "ls" || execname() == "bash" ) {
         printf("%s %s (%ld) | %s \n", probefunc(), execname(), pid(), $name$)

         printf("touched1\n")
         if (tttouch()) {
          printf("success\n")
        }
         printf("touched2\n")
        }
}





probe end {
    printf("End of the world!!!\n")
}
